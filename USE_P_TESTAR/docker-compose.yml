#Arquivo docker-compose.yml
version: '3.9'

services:

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: ZooKeeper_teste
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:3.4'
    container_name: Kafka_teste
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka_teste:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    volumes:
      - kafka_data:/bitnami/kafka

  api:
    build:
      context: ./api
    container_name: API_teste
    ports:
      - "5000:5000"
    networks:
      - kafka-network
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      KAFKA_BROKER: Kafka_teste:9092
      TOPIC: produtos-persistidos


  postgres:
      image: postgres:13
      container_name: Postgres_teste
      environment:
        POSTGRES_DB: mydatabase
        POSTGRES_USER: myuser
        POSTGRES_PASSWORD: mypassword
      ports:
        - "5432:5432"
      networks:
        - kafka-network
      volumes:
        - postgres_data:/var/lib/postgresql/data

  db_initializer:
    build:
      context: ./db
    container_name: DB_Initializer
    depends_on:
      - postgres
    volumes:
      - ./db:/db
    working_dir: /db
    entrypoint: ["sh", "-c", "/usr/bin/wait-for-it.sh --host=postgres --port=5432 --timeout=60 && python createDataBase.py"]
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    networks:
      - kafka-network

  tester_api:
    build:
      context: ./tester_api
    container_name: Tester_API
    depends_on:
      - kafka
    ports:
      - "5001:5001"
    #restart: always
    restart: on-failure
    environment:
      KAFKA_BROKER: Kafka_teste:9092
      TOPIC: cadastro-produtos
    networks:
      - kafka-network

  scheduler:
    build:
      context: ./scheduler
    container_name: Scheduler_teste
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=Kafka_teste:9092
      - TOPIC=cadastro-produtos
    entrypoint: ["sh", "-c", "sleep 30 && python scheduler.py"]
    networks:
      - kafka-network
      
networks:
  kafka-network:
    driver: bridge

volumes:
  zookeeper_data:
  kafka_data:
  postgres_data:
